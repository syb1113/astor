---
import ThemeIcon from "./ThemeIcon.astro";
---

<!-- <nav class="glass-nav"> -->
<div class="nav-container">
  <a href="/" class="nav-link">
    <span class="nav-text">首页</span>
    <div class="nav-indicator"></div>
  </a>
  <a href="/about/" class="nav-link">
    <span class="nav-text">关于</span>
    <div class="nav-indicator"></div>
  </a>
  <a href="/blog/" class="nav-link">
    <span class="nav-text">博客</span>
    <div class="nav-indicator"></div>
  </a>
  <a href="/tags/" class="nav-link">
    <span class="nav-text">分类</span>
    <div class="nav-indicator"></div>
  </a>
  <div class="theme-icon">
    <ThemeIcon />
  </div>
</div>
<!-- </nav> -->

<style>
  .glass-nav {
    z-index: 1000;
    width: auto;
    max-width: 90vw;
  }

  .nav-container {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(20px) saturate(180%);
    -webkit-backdrop-filter: blur(20px) saturate(180%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 24px;
    padding: 8px 12px;
    box-shadow:
      0 8px 32px rgba(0, 0, 0, 0.1),
      0 2px 8px rgba(0, 0, 0, 0.05),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
    position: relative;
    display: flex;
    gap: 4px;
    align-items: center;
    position: relative;
    z-index: 1;
  }

  .nav-container::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.15) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(255, 255, 255, 0.1) 100%
    );
    border-radius: inherit;
    pointer-events: none;
  }

  .nav-links {
    display: flex;
    gap: 4px;
    align-items: center;
    position: relative;
    z-index: 1;
  }

  .nav-link {
    position: relative;
    display: flex;
    flex: 1;

    align-items: center;
    justify-content: center;
    padding: 12px 20px;
    text-decoration: none;
    color: rgba(0, 0, 0, 0.8);
    font-weight: 500;
    font-size: 14px;
    border-radius: 16px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
    min-width: 60px;
  }

  .nav-text {
    color: #000;
    position: relative;
    z-index: 2;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .nav-indicator {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.4) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0.3) 100%
    );
    border-radius: inherit;
    opacity: 0;
    transform: scale(0.8);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .theme-icon {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0.5rem;
  }

  /* .nav-link:hover .nav-indicator {
    opacity: 1;
    transform: scale(1);
  } */

  /* .nav-link:hover {
    color: rgba(0, 0, 0, 0.9);
    transform: translateY(-1px);
  } */

  .nav-link:hover .nav-text {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  .nav-link:active {
    transform: translateY(0);
  }

  /* 当前页面激活状态 */
  .nav-link[aria-current="page"],
  .nav-link.active {
    color: rgba(0, 0, 0, 0.95);
  }

  .nav-link[aria-current="page"] .nav-indicator,
  .nav-link.active .nav-indicator {
    opacity: 1;
    transform: scale(1);
    background: linear-gradient(
      135deg,
      rgba(212, 177, 255, 0.6) 0%,
      rgba(204, 1, 255, 0.3) 50%,
      rgba(220, 164, 230, 0.5) 100%
    );
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .glass-nav {
      top: 10px;
      width: calc(100% - 20px);
      max-width: none;
    }

    .nav-container {
      padding: 6px 8px;
      border-radius: 20px;
    }

    .nav-link {
      padding: 10px 16px;
      font-size: 13px;
      min-width: 50px;
    }

    .nav-links {
      gap: 2px;
    }
  }

  @media (max-width: 480px) {
    .nav-link {
      padding: 8px 12px;
      font-size: 12px;
    }

    .nav-container {
      border-radius: 18px;
    }
  }

  /* 深色模式支持 */
  @media (prefers-color-scheme: dark) {
    .nav-container {
      background: rgba(0, 0, 0, 0.3);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow:
        0 8px 32px rgba(0, 0, 0, 0.3),
        0 2px 8px rgba(0, 0, 0, 0.2),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
    }

    .nav-container::before {
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.05) 0%,
        rgba(255, 255, 255, 0.02) 50%,
        rgba(255, 255, 255, 0.03) 100%
      );
    }

    .nav-link {
      color: rgba(255, 255, 255, 0.9);
    }

    .nav-link:hover {
      color: rgba(255, 255, 255, 1);
    }

    .nav-indicator {
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.15) 0%,
        rgba(255, 255, 255, 0.08) 50%,
        rgba(255, 255, 255, 0.12) 100%
      );
    }

    .nav-link[aria-current="page"] .nav-indicator,
    .nav-link.active .nav-indicator {
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.25) 0%,
        rgba(255, 255, 255, 0.15) 50%,
        rgba(255, 255, 255, 0.2) 100%
      );
    }
  }

  /* 动画增强 */
  @keyframes float {
    0%,
    100% {
      transform: translateX(-50%) translateY(0px);
    }
    50% {
      transform: translateX(-50%) translateY(-2px);
    }
  }

  .glass-nav:hover {
    /* animation: float 3s ease-in-out infinite; */
  }

  /* 滚动时的效果 */
  .glass-nav.scrolled {
    backdrop-filter: blur(30px) saturate(200%);
    -webkit-backdrop-filter: blur(30px) saturate(200%);
  }
</style>

<script>
  // 添加当前页面激活状态
  document.addEventListener("DOMContentLoaded", () => {
    const currentPath = window.location.pathname;
    const navLinks = document.querySelectorAll(".nav-link");

    navLinks.forEach((link) => {
      if (
        link.getAttribute("href") === currentPath ||
        (currentPath.startsWith(link.getAttribute("href")!) &&
          link.getAttribute("href") !== "/")
      ) {
        link.classList.add("active");
      }
    });
  });

  // 滚动时增强毛玻璃效果
  let ticking = false;

  function updateNavOnScroll() {
    const nav = document.querySelector(".glass-nav")!;
    if (window.scrollY > 50) {
      nav.classList.add("scrolled");
    } else {
      nav.classList.remove("scrolled");
    }
    ticking = false;
  }

  window.addEventListener("scroll", () => {
    if (!ticking) {
      requestAnimationFrame(updateNavOnScroll);
      ticking = true;
    }
  });
</script>
